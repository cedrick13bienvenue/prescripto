paths:
  /patients:
    get:
      tags:
        - Patients
      summary: Get all patients
      description: Retrieve a paginated list of all patients - requires doctor authentication
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of patients per page
      responses:
        200:
          description: Patients retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PatientProfile"
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 100
                      totalPages:
                        type: integer
                        example: 10
        401:
          description: Unauthorized - token required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden - doctor role required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /patients/register:
    post:
      tags:
        - Patients
      summary: Register a new patient
      description: Create a new patient account with medical information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientRegistration"
      responses:
        201:
          description: Patient registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Patient registered successfully
                  data:
                    $ref: "#/components/schemas/PatientProfile"
        400:
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /patients/search:
    get:
      tags:
        - Patients
      summary: Search patients
      description: Search patients by name or reference number (Doctor/Admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search query (name or reference number)
      responses:
        200:
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PatientProfile"
        400:
          description: Bad request - query parameter required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized - token required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden - doctor/admin role required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /patients/reference/{referenceNumber}:
    get:
      tags:
        - Patients
      summary: Get patient by reference number
      description: Retrieve patient information using reference number (Doctor/Pharmacist/Admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: referenceNumber
          in: path
          required: true
          schema:
            type: string
          description: Patient reference number
      responses:
        200:
          description: Patient found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/PatientProfile"
        404:
          description: Patient not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized - token required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden - insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /patients/{patientId}:
    get:
      tags:
        - Patients
      summary: Get patient by ID
      description: Retrieve patient information by ID (Doctor/Admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: patientId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Patient ID
      responses:
        200:
          description: Patient found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/PatientProfile"
        404:
          description: Patient not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized - token required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden - doctor/admin role required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - Patients
      summary: Update patient
      description: Update patient information (Doctor/Admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: patientId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Patient ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientUpdate"
      responses:
        200:
          description: Patient updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Patient updated successfully
                  data:
                    $ref: "#/components/schemas/PatientProfile"
        400:
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Patient not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized - token required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden - doctor/admin role required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
